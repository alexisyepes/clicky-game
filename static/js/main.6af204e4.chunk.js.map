{"version":3,"sources":["components/Background.js","components/Navbar.js","components/Header.js","components/IncrediblesCard/index.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Background","react_default","a","createElement","Navbar","props","className","id","href","score","highScore","Header","IncrediblesCard","onClick","clickCount","alt","src","urlImage","Footer","sortImages","imagesArray","sort","Math","random","App","state","incredibles","clickedImages","gameOver","_this","setState","console","log","this","forEach","incredible","count","alert","concat","find","o","i","_this2","incrediblesUrl","map","components_IncrediblesCard","image","key","components_Background","components_Navbar","refreshPage","components_Header","components_Footer","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6af204e4.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"../styles/Background.css\";\r\n\r\nfunction Background() {\r\n  return (\r\n    <div></div>\r\n  );\r\n}\r\n\r\nexport default Background;","import React from \"react\";\r\nimport \"../styles/Navbar.css\";\r\n\r\nfunction Navbar(props) {\r\n    return (\r\n        <div className=\"topBar\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-2\">\r\n                    <a id=\"homeLink\" className=\"navText\" href=\"/\"><h2>Reset</h2></a>\r\n                </div>\r\n                <div className=\"col-md-5 navText\">\r\n                    <h2>Click an Image to begin!</h2>\r\n                </div>\r\n                <div className=\"col-md-2 navText\">\r\n                    <h2>Score: {props.score}</h2>\r\n                </div>\r\n                <div className=\"col-md-3 navText\">\r\n                    <h2>Top Score: {props.highScore}</h2>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport \"../styles/Header.css\";\r\n\r\nfunction Header() {\r\n    return (\r\n        <div>\r\n        <header className=\"background\">\r\n            <h1 className=\"title\">The Incredibles... Clicky-Game</h1>\r\n            <h6 className=\"instructions\">Click on an image to earn points... but don't click on any more than once!\r\n                          or you lose!\r\n                </h6>\r\n        </header>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction IncrediblesCard(props) {\r\n  return (\r\n    <div className=\"card\" onClick={() => props.clickCount(props.id)}>\r\n      <div className=\"img-container\">\r\n        <img className=\"images\" alt=\"\" src={props.urlImage}/>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default IncrediblesCard;","import React from \"react\";\r\nimport \"../styles/Footer.css\";\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer className=\"page-footer black accent-2\">\r\n\r\n            <div className=\"footer-copyright\">\r\n                <div className=\"container\">\r\n                    <div id=\"footerText\"><b>Â© 2019 Alexis Yepes Sanabria ||| University of Toronto Bootcamp</b>\r\n                        <a className=\"grey-text text-lighten-4 right\" href=\"https://github.com/alexisyepes/clicky-game\">\r\n\r\n                        <br></br><b>Code Reference</b></a>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React, { Component } from 'react';\nimport Background from './components/Background';\nimport Navbar from './components/Navbar';\nimport Header from './components/Header';\nimport IncrediblesCard from './components/IncrediblesCard';\nimport incredibles from './incredibles.json';\nimport './styles/App.css';\nimport Footer from './components/Footer';\n\nconst sortImages = imagesArray => imagesArray.sort(() => Math.random() - 0.5);\n\nclass App extends Component {\n\n  state = {\n    incredibles: sortImages(incredibles),\n    score: 0,\n    highScore: 0,\n    clickedImages: []\n  }\n\n  gameOver = () => {\n    if (this.state.score > this.state.highScore) {\n      this.setState({ highScore: this.state.score }, function () {\n        console.log(this.state.highScore);\n      });\n    }\n    this.state.incredibles.forEach(incredible => {\n      incredible.count = 0;\n    });\n    if (this.state.score === 12) {\n      alert(\"Awesome Job! You won The Game :)\");\n      this.setState({ score: 0 });\n      return true;\n    } else {\n      alert(`Game Over :( \\nscore: ${this.state.score}\\nYou clicked an image already clicked \\nTry again`);\n      this.setState({ score: 0 });\n      return true;\n    }\n\n  }\n\n  clickCount = id => {\n    // eslint-disable-next-line\n    this.state.incredibles.find((o, i) => {\n\n      if (o.id === id) {\n        if (incredibles[i].count === 0) {\n          incredibles[i].count = incredibles[i].count + 1;\n          this.setState({ score: this.state.score + 1 }, function () {\n            console.log(this.state.score);\n          });\n          this.state.incredibles.sort(() => Math.random() - 0.5)\n          return true;\n        } else {\n          this.gameOver();\n        }\n      }\n    });\n  }\n  render() {\n    const incrediblesUrl = this.state.incredibles.map(incredible => {\n      return (\n        <div className=\"col-md-3\">\n\n          <IncrediblesCard\n            urlImage={incredible.image}\n            clickCount={this.clickCount}\n            id={incredible.id}\n            key={incredible.id}\n          />\n        </div>\n      )\n    })\n    return (\n      <div className=\"App\">\n        <Background />\n        <Navbar\n          score={this.state.score}\n          highScore={this.state.highScore}\n          onClick={this.refreshPage}\n        />\n        <Header />\n        <div className=\"container cardBox\">\n          <div className=\"row\">\n            {incrediblesUrl}\n          </div>\n        </div>\n        <Footer />\n      </div>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}